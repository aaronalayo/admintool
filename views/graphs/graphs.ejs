<%- include ('../navbarpage/navbar') %>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.slim.js" integrity="sha256-Dul4c09cdrWKXVtallPxF558lwxMwCC8dXJdZ0PVW54=" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.bundle.min.js"></script>


<p id="message"></p>

<div class="chart-container" style="position: relative; height:50vh; width:60vw">
  <canvas id="chart"></canvas>
</div>

<script>   
Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
Chart.defaults.global.defaultFontColor = '#292b2c';
  var ctx = document.getElementById('chart').getContext('2d');
  
      var chart = new Chart(ctx, {
      type: 'line',
      data: {
          labels:<%-JSON.stringify(labels)%>,
          datasets: [{
              label:<%-JSON.stringify(sensor)%>,
              data: <%-JSON.stringify(dataset)%>,
              backgroundColor: [
                      "rgba(2,117,216,0.2)",
                  // 'rgba(255, 99, 132, 0.2)',
                  // 'rgba(54, 162, 235, 0.2)',
                  // 'rgba(255, 206, 86, 0.2)',
                  // 'rgba(75, 192, 192, 0.2)',
                  // 'rgba(153, 102, 255, 0.2)',
                  // 'rgba(255, 159, 64, 0.2)'
              ],
              borderColor: [
                    "rgba(2,117,216,1)",
                  // 'rgba(255, 99, 132, 1)',
                  // 'rgba(54, 162, 235, 1)',
                  // 'rgba(255, 206, 86, 1)',
                  // 'rgba(75, 192, 192, 1)',
                  // 'rgba(153, 102, 255, 1)',
                  // 'rgba(255, 159, 64, 1)'
              ],
              lineTension: 0.3,
              borderWidth: 0.5,
              pointRadius: 5,
              pointBackgroundColor: "rgba(255, 99, 132, 1)",
              pointBorderColor: "rgba(255,255,255,0.8)",
              pointHoverRadius: 5,
              pointHoverBackgroundColor: "rgba(2,117,216,1)",
              pointHitRadius: 50,
              pointBorderWidth: 2,
          }]
      },
      options: {
          responsive: true, 
          maintainAspectRatio: false,
          tooltips: {
             
          },
          hover: {
              mode: 'dataset',
              mode: 'point',
          },
          legend: {
              labels: {
              fontSize: 18
              }
          },
          title: {
              display: true,
              text: 'Measurements for last 100 values from sensor'
      },
          scales: {
              xAxes: [{
                  
                  scaleLabel: {
                      display: false,
                  },
                  gridLines: {
                    display: true,
                  },
                  ticks: {
                  callback: function(value) { 
                  return new Date(value).toLocaleDateString('dk-DK', {hour:'numeric', minute:'numeric'}); 
              },
          },    gridLines: {
                  color: "rgba(0, 0, 0, .125)",
                }
                  
              }],
              
              yAxes: [{
                  
                  ticks: {
                      beginAtZero: true
             
                  },
                  gridLines: {
                     color: "rgba(0, 0, 0, .125)",
                }
              }],
              
          }
      }
      
  });    

</script>

<form>
<div class="form-row" id="my-form-id">
    <div class="form-group col-md-2">
        <label>Sensor</label>
        <input type="number" class="form-control" id="sensor-id" placeholder="Sensor">
    </div>
    <div class="form-group col-md-2">
        <label>Limit</label>
        <input type="number" class="form-control" id="new-limit" placeholder="Limit">
    </div>
    <div class="form-group col-md-4">
        <label>Start Date</label>
        <input type="datetime-local" class="form-control" id="start-date" placeholder="Start Date">
    </div>
    <div class="form-group col-md-4">
        <label>End Date</label>
        <input type="datetime-local" class="form-control" id="end-date" placeholder="End Date">
    </div>
    <div class="form-group col-md-4">
        <button id="btn-send" type="submit" class="btn btn-primary" onclick="onDataSubmitted()" value="Submit form">Send</button>
        <a href="/" class="btn btn-primary" data-toggle="button">Go Back</a>
    </div>
    
</div>
<div class="form-group col-md-2">
    <%if(typeof message == "undefined"){%>
        <div></div>
      <% } else { %>
        <div class="error" role="alert"> <%= message%> </div> 
      <%}%>
    </div>
</form>

<script>
    
    //connect to localhost
    const socket = io.connect("localhost:2000");
    //Connec to public ip
    // const socket = io.connect("http://35.228.37.83:80");
    function onDataSubmitted() {
              
            const newSensor = $('#sensor-id').val();
            const newLimit = $('#new-limit').val();
            const startDate = $('#start-date').val();
            const endDate = $('#end-date').val()
            
            socket.emit( 'graphs', {startDate: startDate, endDate:endDate, newSensor:newSensor, newLimit: newLimit});
          
    }

    socket.on("graphs", (message) => {
            
            $('#message').prepend(`<p>${message.message}</p>`);
        });


    


</script>


<%- include ('../footerpage/footer') %>
